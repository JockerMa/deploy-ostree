variables:
  IMAGE_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  BRANCH_TAG: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  LATEST_TAG: $CI_REGISTRY_IMAGE:latest

stages:
  - lint
  - test
  - build
  - integration
  - release

# linting
.python-template: &python-template
  image: python:3.5
  before_script:
    - pip install .[dev]

lint:
  <<: *python-template
  stage: lint
  script:
    - make lint

# unit-style tests
unit:
  <<: *python-template
  stage: test
  script:
    - make test/unit

provisioners:
  <<: *python-template
  stage: test
  script:
    - make test/provisioners

# package
build-wheel:
  <<: *python-template
  stage: build
  script:
    - make build/wheel
  artifacts:
    paths:
      - dist/*.whl

# integration tests
.docker-template: &docker-template
  image: docker
  services:
    - docker:dind
  before_script:
    - apk add --no-cache make
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

integration:
  <<: *docker-template
  stage: integration
  script:
    - make build/docker test/integration

integration-long:
  <<: *docker-template
  stage: integration
  script:
    - make build/docker test/integration_long

# release
.release-template: &release-template
  stage: release
  image: python
  before_script:
    - pip install twine
  script:
    - twine upload --repository-url $CI_ENVIRONMENT_URL dist/*.whl

release-test:
  <<: *release-template
  variables:
    TWINE_USERNAME: $PYPI_TEST_USERNAME
    TWINE_PASSWORD: $PYPI_TEST_PASSWORD
  environment:
    name: test
    url: https://test.pypi.org/legacy/
  when: manual

release-pypi:
  <<: *release-template
  variables:
    TWINE_USERNAME: $PYPI_USERNAME
    TWINE_PASSWORD: $PYPI_PASSWORD
  environment:
    name: pypi
    url: https://upload.pypi.org/legacy/
  only:
    - /^v.+$/
